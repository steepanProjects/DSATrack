DSA LEARNING PATH - CATEGORIZED PROBLEMS & CONCEPTS
==================================================

STEP 1: LEARN THE BASICS (31 Problems)
======================================

Lec 1: Things to Know in C++/Java/Python or any language (9 Problems)
--------------------------------------------------------------------
1. User Input / Output - Easy
2. Data Types - Easy
3. If Else statements - Easy
4. Switch Statement - Easy
5. What are arrays, strings? - Easy
6. For loops - Easy
7. While loops - Easy
8. Functions (Pass by Reference and Value) - Easy
9. Time Complexity [Learn Basics, and then analyse in next Steps] - Easy

Lec 2: Build-up Logical Thinking (1 Problem)
-------------------------------------------
10. Patterns - Easy

Lec 3: Learn STL/Java-Collections or similar thing in your language (2 Problems)
------------------------------------------------------------------------------
11. C++ STL - Medium
12. Java Collections - Easy

Lec 4: Know Basic Maths (7 Problems)
-----------------------------------
13. Count Digits - Easy
14. Reverse a Number - Easy
15. Check Palindrome - Easy
16. GCD Or HCF - Easy
17. Armstrong Numbers - Easy
18. Print all Divisors - Easy
19. Check for Prime - Easy

Lec 5: Learn Basic Recursion (9 Problems)
----------------------------------------
20. Understand recursion by print something N times - Easy
21. Print name N times using recursion - Easy
22. Print 1 to N using recursion - Easy
23. Print N to 1 using recursion - Easy
24. Sum of first N numbers - Easy
25. Factorial of N numbers - Easy
26. Reverse an array - Easy
27. Check if a string is palindrome or not - Medium
28. Fibonacci Number - Easy

Lec 6: Learn Basic Hashing (3 Problems)
--------------------------------------
29. Hashing Theory - Medium
30. Counting frequencies of array elements - Easy
31. Find the highest/lowest frequency element - Easy

STEP 2: LEARN IMPORTANT SORTING TECHNIQUES (7 Problems)
======================================================

Lec 1: Sorting-I (3 Problems)
-----------------------------
32. Selection Sort - Easy
33. Bubble Sort - Easy
34. Insertion Sort - Easy

Lec 2: Sorting-II (4 Problems)
-----------------------------
35. Merge Sort - Medium
36. Recursive Bubble Sort - Easy
37. Recursive Insertion Sort - Easy
38. Quick Sort - Easy

STEP 3: SOLVE PROBLEMS ON ARRAYS [Easy -> Medium -> Hard] (40 Problems)
======================================================================

Lec 1: Easy (14 Problems)
-------------------------
39. Largest Element in an Array - Easy
40. Second Largest Element in an Array without sorting - Easy
41. Check if the array is sorted - Easy
42. Remove duplicates from Sorted array - Easy
43. Left Rotate an array by one place - Easy
44. Left rotate an array by D places - Easy
45. Move Zeros to end - Easy
46. Linear Search - Easy
47. Find the Union - Medium
48. Find missing number in an array - Easy
49. Maximum Consecutive Ones - Easy
50. Find the number that appears once, and other numbers twice - Medium
51. Longest subarray with given sum K(positives) - Medium
52. Longest subarray with sum K (Positives + Negatives) - Medium

Lec 2: Medium (14 Problems)
---------------------------
53. 2Sum Problem - Medium
54. Sort an array of 0's 1's and 2's - Medium
55. Majority Element (>n/2 times) - Easy
56. Kadane's Algorithm, maximum subarray sum - Easy
57. Print subarray with maximum subarray sum (extended version of above problem) - Medium
58. Stock Buy and Sell - Easy
59. Rearrange the array in alternating positive and negative items - Medium
60. Next Permutation - Medium
61. Leaders in an Array problem - Easy
62. Longest Consecutive Sequence in an Array - Medium
63. Set Matrix Zeros - Medium
64. Rotate Matrix by 90 degrees - Medium
65. Print the matrix in spiral manner - Medium
66. Count subarrays with given sum - Easy

Lec 3: Hard (12 Problems)
-------------------------
67. Pascal's Triangle - Medium
68. Majority Element (n/3 times) - Medium
69. 3-Sum Problem - Medium
70. 4-Sum Problem - Hard
71. Largest Subarray with 0 Sum - Medium
72. Count number of subarrays with given xor K - Hard
73. Merge Overlapping Subintervals - Medium
74. Merge two sorted arrays without extra space - Medium
75. Find the repeating and missing number - Hard
76. Count Inversions - Hard
77. Reverse Pairs - Hard
78. Maximum Product Subarray - Easy

STEP 4: BINARY SEARCH [1D, 2D Arrays, Search Space] (32 Problems)
================================================================

Lec 1: BS on 1D Arrays (13 Problems)
------------------------------------
79. Binary Search to find X in sorted array - Easy
80. Implement Lower Bound - Easy
81. Implement Upper Bound - Easy
82. Search Insert Position - Easy
83. Floor/Ceil in Sorted Array - Medium
84. Find the first or last occurrence of a given number in a sorted array - Easy
85. Count occurrences of a number in a sorted array with duplicates - Easy
86. Search in Rotated Sorted Array I - Medium
87. Search in Rotated Sorted Array II - Medium
88. Find minimum in Rotated Sorted Array - Medium
89. Find out how many times has an array been rotated - Easy
90. Single element in a Sorted Array - Easy
91. Find peak element - Hard

Lec 2: BS on Answers (14 Problems)
---------------------------------
92. Find square root of a number in log n - Medium
93. Find the Nth root of a number using binary search - Medium
94. Koko Eating Bananas - Hard
95. Minimum days to make M bouquets - Hard
96. Find the smallest Divisor - Easy
97. Capacity to Ship Packages within D Days - Hard
98. Kth Missing Positive Number - Easy
99. Aggressive Cows - Hard
100. Book Allocation Problem - Hard
101. Split array - Largest Sum - Hard
102. Painter's partition - Hard
103. Minimize Max Distance to Gas Station - Hard
104. Median of 2 sorted arrays - Hard
105. Kth element of 2 sorted arrays - Medium

Lec 3: BS on 2D Arrays (5 Problems)
-----------------------------------
106. Find the row with maximum number of 1's - Easy
107. Search in a 2 D matrix - Medium
108. Search in a row and column wise sorted matrix - Medium
109. Find Peak Element (2D Matrix) - Hard
110. Matrix Median - Hard

STEP 5: STRINGS [Basic and Medium] (15 Problems)
===============================================

Lec 1: Basic and Easy String Problems (7 Problems)
-------------------------------------------------
111. Remove outermost Paranthesis - Easy
112. Reverse words in a given string / Palindrome Check - Easy
113. Largest odd number in a string - Easy
114. Longest Common Prefix - Easy
115. Isomorphic String - Easy
116. check whether one string is a rotation of another - Medium
117. Check if two strings are anagram of each other - Medium

Lec 2: Medium String Problems (8 Problems)
-----------------------------------------
118. Sort Characters by frequency - Easy
119. Maximum Nesting Depth of Paranthesis - Easy
120. Roman Number to Integer and vice versa - Easy
121. Implement Atoi - Medium
122. Count Number of Substrings - Medium
123. Longest Palindromic Substring[Do it without DP] - Hard
124. Sum of Beauty of all substring - Medium
125. Reverse Every Word in A String - Easy

STEP 6: LEARN LINKEDLIST [Single LL, Double LL, Medium, Hard Problems] (31 Problems)
==================================================================================

Lec 1: Learn 1D LinkedList (5 Problems)
--------------------------------------
126. Introduction to LinkedList, learn about struct, and how is node represented - Easy
127. Inserting a node in LinkedList - Easy
128. Deleting a node in LinkedList - Medium
129. Find the length of the linkedlist [learn traversal] - Easy
130. Search an element in the LL - Easy

Lec 2: Learn Doubly LinkedList (4 Problems)
-----------------------------------------
131. Introduction to DLL, learn about struct, and how is node represented - Easy
132. Insert a node in DLL - Easy
133. Delete a node in DLL - Medium
134. Reverse a DLL - Medium

Lec 3: Medium Problems of LL (15 Problems)
-----------------------------------------
135. Middle of a LinkedList [TortoiseHare Method] - Easy
136. Reverse a LinkedList [Iterative] - Easy
137. Reverse a LL [Recursive] - Easy
138. Detect a loop in LL - Medium
139. Find the starting point in LL - Medium
140. Length of Loop in LL - Easy
141. Check if LL is palindrome or not - Medium
142. Segrregate odd and even nodes in LL - Medium
143. Remove Nth node from the back of the LL - Medium
144. Delete the middle node of LL - Medium
145. Sort LL - Medium
146. Sort a LL of 0's 1's and 2's by changing links - Medium
147. Find the intersection point of Y LL - Medium
148. Add 1 to a number represented by LL - Medium
149. Add 2 numbers in LL - Medium

Lec 4: Medium Problems of DLL (3 Problems)
-----------------------------------------
150. Delete all occurrences of a key in DLL - Medium
151. Find pairs with given sum in DLL - Medium
152. Remove duplicates from sorted DLL - Medium

Lec 5: Hard Problems of LL (4 Problems)
--------------------------------------
153. Reverse LL in group of given size K - Hard
154. Rotate a LL - Medium
155. Flattening of LL - Hard
156. Clone a Linked List with random and next pointer - Hard

STEP 7: RECURSION [PatternWise] (25 Problems)
============================================

Lec 1: Get a Strong Hold (5 Problems)
------------------------------------
157. Recursive Implementation of atoi() - Hard
158. Pow(x, n) - Medium
159. Count Good numbers - Easy
160. Sort a stack using recursion - Medium
161. Reverse a stack using recursion - Easy

Lec 2: Subsequences Pattern (12 Problems)
----------------------------------------
162. Generate all binary strings - Medium
163. Generate Paranthesis - Medium
164. Print all subsequences/Power Set - Medium
165. Learn All Patterns of Subsequences (Theory) - Medium
166. Count all subsequences with sum K - Hard
167. Check if there exists a subsequence with sum K - Medium
168. Combination Sum - Medium
169. Combination Sum-II - Medium
170. Subset Sum-I - Medium
171. Subset Sum-II - Medium
172. Combination Sum - III - Hard
173. Letter Combinations of a Phone number - Medium

Lec 3: Trying out all Combos / Hard (8 Problems)
-----------------------------------------------
174. Palindrome Partitioning - Medium
175. Word Search - Medium
176. N Queen - Hard
177. Rat in a Maze - Hard
178. Word Break - Medium
179. M Coloring Problem - Hard
180. Sudoko Solver - Hard
181. Expression Add Operators - Hard

STEP 8: BIT MANIPULATION [Concepts & Problems] (18 Problems)
==========================================================

Lec 1: Learn Bit Manipulation (8 Problems)
-----------------------------------------
182. Introduction to Bit Manipulation [Theory] - Easy
183. Check if the i-th bit is set or not - Easy
184. Check if a number is odd or not - Easy
185. Check if a number is power of 2 or not - Easy
186. Count the number of set bits - Easy
187. Set/Unset the rightmost unset bit - Easy
188. Swap two numbers - Easy
189. Divide two integers without using multiplication, division and mod operator - Medium

Lec 2: Interview Problems (5 Problems)
-------------------------------------
190. Count number of bits to be flipped to convert A to B - Medium
191. Find the number that appears odd number of times - Easy
192. Power Set - Medium
193. Find xor of numbers from L to R - Easy
194. Find the two numbers appearing odd number of times - Easy

Lec 3: Advanced Maths (5 Problems)
---------------------------------
195. Print Prime Factors of a Number - Easy
196. All Divisors of a Number - Easy
197. Sieve of Eratosthenes - Medium
198. Find Prime Factorisation of a Number using Sieve - Medium
199. Power(n, x) - Medium

STEP 9: STACK AND QUEUES [Learning, Pre-In-Post-fix, Monotonic Stack, Implementation] (30 Problems)
==================================================================================================

Lec 1: Learning (8 Problems)
---------------------------
200. Implement Stack using Arrays - Easy
201. Implement Queue using Arrays - Easy
202. Implement Stack using Queue - Medium
203. Implement Queue using Stack - Medium
204. Implement stack using Linkedlist - Easy
205. Implement queue using Linkedlist - Medium
206. Check for balanced paranthesis - Medium
207. Implement Min Stack - Medium

Lec 2: Prefix, Infix, PostFix Conversion Problems (6 Problems)
-------------------------------------------------------------
208. Infix to Postfix Conversion using Stack - Medium
209. Prefix to Infix Conversion - Medium
210. Prefix to Postfix Conversion - Medium
211. Postfix to Prefix Conversion - Medium
212. Postfix to Infix - Medium
213. Convert Infix To Prefix Notation - Medium

Lec 3: Monotonic Stack/Queue Problems [VVV. Imp] (11 Problems)
-------------------------------------------------------------
214. Next Greater Element - Easy
215. Next Greater Element 2 - Medium
216. Next Smaller Element - Easy
217. Number of NGEs to the right - Easy
218. Trapping Rainwater - Hard
219. Sum of subarray minimum - Medium
220. Asteroid Collision - Medium
221. Sum of subarray ranges - Medium
222. Remove k Digits - Medium
223. Largest rectangle in a histogram - Medium
224. Maximal Rectangles - Hard

Lec 4: Implementation Problems (5 Problems)
------------------------------------------
225. Sliding Window maximum - Hard
226. Stock span problem - Medium
227. The Celebrity Problem - Hard
228. LRU cache (IMPORTANT) - Hard
229. LFU cache - Hard

STEP 10: SLIDING WINDOW & TWO POINTER COMBINED PROBLEMS (12 Problems)
===================================================================

Lec 1: Medium Problems (8 Problems)
----------------------------------
230. Longest Substring Without Repeating Characters - Medium
231. Max Consecutive Ones III - Medium
232. Fruit Into Baskets - Medium
233. longest repeating character replacement - Medium
234. Binary subarray with sum - Easy
235. Count number of nice subarrays - Medium
236. Number of substring containing all three characters - Medium
237. Maximum point you can obtain from cards - Medium

Lec 2: Hard Problems (4 Problems)
--------------------------------
238. Longest Substring with At Most K Distinct Characters - Medium
239. Subarray with k different integers - Hard
240. Minimum Window Substring - Hard
241. Minimum Window Subsequence - Hard

STEP 11: HEAPS [Learning, Medium, Hard Problems] (17 Problems)
============================================================

Lec 1: Learning (4 Problems)
---------------------------
242. Introduction to Priority Queues using Binary Heaps - Medium
243. Min Heap and Max Heap Implementation - Medium
244. Check if an array represents a min-heap or not - Medium
245. Convert min Heap to max Heap - Medium

Lec 2: Medium Problems (7 Problems)
----------------------------------
246. Kth largest element in an array [use priority queue] - Easy
247. Kth smallest element in an array [use priority queue] - Easy
248. Sort K sorted array - Easy
249. Merge M sorted Lists - Hard
250. Replace each array element by its corresponding rank - Easy
251. Task Scheduler - Medium
252. Hands of Straights - Medium

Lec 3: Hard Problems (6 Problems)
--------------------------------
253. Design twitter - Medium
254. Connect `n` ropes with minimal cost - Medium
255. Kth largest element in a stream of running integers - Easy
256. Maximum Sum Combination - Medium
257. Find Median from Data Stream - Hard
258. K most frequent elements - Medium

STEP 12: GREEDY ALGORITHMS [Easy, Medium/Hard] (16 Problems)
===========================================================

Lec 1: Easy Problems (5 Problems)
--------------------------------
259. Assign Cookies - Easy
260. Fractional Knapsack Problem - Medium
261. Greedy algorithm to find minimum number of coins - Medium
262. Lemonade Change - Easy
263. Valid Paranthesis Checker - Medium

Lec 2: Medium/Hard (11 Problems)
-------------------------------
264. N meetings in one room - Medium
265. Jump Game - Medium
266. Jump Game 2 - Medium
267. Minimum number of platforms required for a railway - Medium
268. Job sequencing Problem - Medium
269. Candy - Hard
270. Program for Shortest Job First (or SJF) CPU Scheduling - Medium
271. Program for Least Recently Used (LRU) Page Replacement Algorithm - Medium
272. Insert Interval - Medium
273. Merge Intervals - Medium
274. Non-overlapping Intervals - Medium

STEP 13: BINARY TREES [Traversals, Medium and Hard Problems] (39 Problems)
=========================================================================

Lec 1: Traversals (13 Problems)
------------------------------
275. Introduction to Trees - Easy
276. Binary Tree Representation in C++ - Easy
277. Binary Tree Representation in Java - Easy
278. Binary Tree Traversals in Binary Tree - Easy
279. Preorder Traversal of Binary Tree - Easy
280. Inorder Traversal of Binary Tree - Easy
281. Post-order Traversal of Binary Tree - Easy
282. Level order Traversal / Level order traversal in spiral form - Easy
283. Iterative Preorder Traversal of Binary Tree - Easy
284. Iterative Inorder Traversal of Binary Tree - Easy
285. Post-order Traversal of Binary Tree using 2 stack - Easy
286. Post-order Traversal of Binary Tree using 1 stack - Medium
287. Preorder, Inorder, and Postorder Traversal in one Traversal - Medium

Lec 2: Medium Problems (12 Problems)
-----------------------------------
288. Height of a Binary Tree - Medium
289. Check if the Binary tree is height-balanced or not - Medium
290. Diameter of Binary Tree - Medium
291. Maximum path sum - Hard
292. Check if two trees are identical or not - Medium
293. Zig Zag Traversal of Binary Tree - Easy
294. Boundary Traversal of Binary Tree - Medium
295. Vertical Order Traversal of Binary Tree - Easy
296. Top View of Binary Tree - Easy
297. Bottom View of Binary Tree - Medium
298. Right/Left View of Binary Tree - Medium
299. Symmetric Binary Tree - Medium

Lec 3: Hard Problems (14 Problems)
---------------------------------
300. Root to Node Path in Binary Tree - Medium
301. LCA in Binary Tree - Medium
302. Maximum width of a Binary Tree - Medium
303. Check for Children Sum Property - Hard
304. Print all the Nodes at a distance of K in a Binary Tree - Medium
305. Minimum time taken to BURN the Binary Tree from a Node - Hard
306. Count total Nodes in a COMPLETE Binary Tree - Medium
307. Requirements needed to construct a Unique Binary Tree | Theory - Medium
308. Construct Binary Tree from inorder and preorder - Hard
309. Construct the Binary Tree from Postorder and Inorder Traversal - Hard
310. Serialize and deserialize Binary Tree - Hard
311. Morris Preorder Traversal of a Binary Tree - Medium
312. Morris Inorder Traversal of a Binary Tree - Medium
313. Flatten Binary Tree to LinkedList - Hard

STEP 14: BINARY SEARCH TREES [Concept and Problems] (16 Problems)
===============================================================

Lec 1: Concepts (3 Problems)
---------------------------
314. Introduction to Binary Search Tree - Easy
315. Search in a Binary Search Tree - Easy
316. Find Min/Max in BST - Medium

Lec 2: Practice Problems (13 Problems)
-------------------------------------
317. Ceil in a Binary Search Tree - Easy
318. Floor in a Binary Search Tree - Easy
319. Insert a given Node in Binary Search Tree - Easy
320. Delete a Node in Binary Search Tree - Medium
321. Find K-th smallest/largest element in BST - Medium
322. Check if a tree is a BST or BT - Medium
323. LCA in Binary Search Tree - Medium
324. Construct a BST from a preorder traversal - Medium
325. Inorder Successor/Predecessor in BST - Medium
326. Merge 2 BST's - Hard
327. Two Sum In BST | Check if there exists a pair with Sum K - Medium
328. Recover BST | Correct BST with two nodes swapped - Hard
329. Largest BST in Binary Tree - Hard

STEP 15: GRAPHS [Concepts & Problems] (54 Problems)
==================================================

Lec 1: Learning (6 Problems)
---------------------------
330. Graph and Types - Easy
331. Graph Representation | C++ - Easy
332. Graph Representation | Java - Easy
333. Connected Components | Logic Explanation - Hard
334. BFS - Medium
335. DFS - Hard

Lec 2: Problems on BFS/DFS (14 Problems)
----------------------------------------
336. Number of provinces (leetcode) - Medium
337. Connected Components Problem in Matrix - Hard
338. Rotten Oranges - Medium
339. Flood fill - Hard
340. Cycle Detection in unirected Graph (bfs) - Hard
341. Cycle Detection in undirected Graph (dfs) - Hard
342. 0/1 Matrix (Bfs Problem) - Medium
343. Surrounded Regions (dfs) - Hard
344. Number of Enclaves [flood fill implementation - multisource] - Hard
345. Word ladder - 1 - Hard
346. Word ladder - 2 - Hard
347. Number of Distinct Islands [dfs multisource] - Hard
348. Bipartite Graph (DFS) - Medium
349. Cycle Detection in Directed Graph (DFS) - Hard

Lec 3: Topo Sort and Problems (7 Problems)
-----------------------------------------
350. Topo Sort - Hard
351. Kahn's Algorithm - Hard
352. Cycle Detection in Directed Graph (BFS) - Hard
353. Course Schedule - I - Hard
354. Course Schedule - II - Hard
355. Find eventual safe states - Hard
356. Alien dictionary - Hard

Lec 4: Shortest Path Algorithms and Problems (13 Problems)
---------------------------------------------------------
357. Shortest Path in UG with unit weights - Hard
358. Shortest Path in DAG - Hard
359. Djisktra's Algorithm - Hard
360. Why priority Queue is used in Djisktra's Algorithm - Medium
361. Shortest path in a binary maze - Medium
362. Path with minimum effort - Medium
363. Cheapest flights within k stops - Hard
364. Network Delay time - Medium
365. Number of ways to arrive at destination - Medium
366. Minimum steps to reach end from start by performing multiplication and mod operations with array elements - Hard
367. Bellman Ford Algorithm - Hard
368. Floyd Warshal Algorithm - Hard
369. Find the city with the smallest number of neighbors in a threshold distance - Hard

Lec 5: MinimumSpanningTree/Disjoint Set and Problems (11 Problems)
-----------------------------------------------------------------
370. Minimum Spanning Tree - Hard
371. Prim's Algorithm - Hard
372. Disjoint Set [Union by Rank] - Hard
373. Disjoint Set [Union by Size] - Hard
374. Kruskal's Algorithm - Hard
375. Number of operations to make network connected - Medium
376. Most stones removed with same rows or columns - Medium
377. Accounts merge - Hard
378. Number of island II - Hard
379. Making a Large Island - Hard
380. Swim in rising water - Hard

Lec 6: Other Algorithms (3 Problems)
-----------------------------------
381. Bridges in Graph - Hard
382. Articulation Point - Hard
383. Kosaraju's Algorithm - Hard

STEP 16: DYNAMIC PROGRAMMING [Patterns and Problems] (56 Problems)
=================================================================

Lec 1: Introduction to DP (1 Problem)
------------------------------------
384. Dynamic Programming Introduction - Medium

Lec 2: 1D DP (5 Problems)
-------------------------
385. Climbing Stars - Medium
386. Frog Jump(DP-3) - Medium
387. Frog Jump with k distances(DP-4) - Medium
388. Maximum sum of non-adjacent elements (DP 5) - Medium
389. House Robber (DP 6) - Medium

Lec 3: 2D/3D DP and DP on Grids (7 Problems)
--------------------------------------------
390. Ninja's Training (DP 7) - Medium
391. Grid Unique Paths : DP on Grids (DP8) - Medium
392. Grid Unique Paths 2 (DP 9) - Medium
393. Minimum path sum in Grid (DP 10) - Medium
394. Minimum path sum in Triangular Grid (DP 11) - Medium
395. Minimum/Maximum Falling Path Sum (DP-12) - Medium
396. 3-d DP : Ninja and his friends (DP-13) - Medium

Lec 4: DP on Subsequences (11 Problems)
--------------------------------------
397. Subset sum equal to target (DP- 14) - Medium
398. Partition Equal Subset Sum (DP- 15) - Medium
399. Partition Set Into 2 Subsets With Min Absolute Sum Diff (DP- 16) - Medium
400. Count Subsets with Sum K (DP - 17) - Medium
401. Count Partitions with Given Difference (DP - 18) - Medium
402. Assign Cookies - Hard
403. Minimum Coins (DP - 20) - Hard
404. Target Sum (DP - 21) - Medium
405. Coin Change 2 (DP - 22) - Hard
406. Unbounded Knapsack (DP - 23) - Hard
407. Rod Cutting Problem | (DP - 24) - Hard

Lec 5: DP on Strings (10 Problems)
---------------------------------
408. Longest Common Subsequence | (DP - 25) - Hard
409. Print Longest Common Subsequence | (DP - 26) - Hard
410. Longest Common Substring | (DP - 27) - Hard
411. Longest Palindromic Subsequence | (DP-28) - Hard
412. Minimum insertions to make string palindrome | DP-29 - Hard
413. Minimum Insertions/Deletions to Convert String | (DP- 30) - Hard
414. Shortest Common Supersequence | (DP - 31) - Hard
415. Distinct Subsequences| (DP-32) - Hard
416. Edit Distance | (DP-33) - Hard
417. Wildcard Matching | (DP-34) - Medium

Lec 6: DP on Stocks (6 Problems)
-------------------------------
418. Best Time to Buy and Sell Stock |(DP-35) - Hard
419. Buy and Sell Stock - II|(DP-36) - Hard
420. Buy and Sell Stocks III|(DP-37) - Hard
421. Buy and Stock Sell IV |(DP-38) - Hard
422. Buy and Sell Stocks With Cooldown|(DP-39) - Hard
423. Buy and Sell Stocks With Transaction Fee|(DP-40) - Hard

Lec 7: DP on LIS (7 Problems)
-----------------------------
424. Longest Increasing Subsequence |(DP-41) - Hard
425. Printing Longest Increasing Subsequence|(DP-42) - Hard
426. Longest Increasing Subsequence |(DP-43) - Hard
427. Largest Divisible Subset|(DP-44) - Hard
428. Longest String Chain|(DP-45) - Hard
429. Longest Bitonic Subsequence |(DP-46) - Hard
430. Number of Longest Increasing Subsequences|(DP-47) - Hard

Lec 8: MCM DP | Partition DP (7 Problems)
----------------------------------------
431. Matrix Chain Multiplication|(DP-48) - Hard
432. Matrix Chain Multiplication | Bottom-Up|(DP-49) - Hard
433. Minimum Cost to Cut the Stick|(DP-50) - Hard
434. Burst Balloons|(DP-51) - Hard
435. Evaluate Boolean Expression to True|(DP-52) - Hard
436. Palindrome Partitioning - II|(DP-53) - Hard
437. Partition Array for Maximum Sum|(DP-54) - Hard

Lec 9: DP on Squares (2 Problems)
--------------------------------
438. Maximum Rectangle Area with all 1's|(DP-55) - Hard
439. Count Square Submatrices with All Ones|(DP-56) - Hard

STEP 17: TRIES (7 Problems)
==========================

Lec 1: Theory (1 Problem)
------------------------
440. Implement TRIE | INSERT | SEARCH | STARTSWITH - Hard

Lec 2: Problems (6 Problems)
---------------------------
441. Implement Trie - 2 (Prefix Tree) - Hard
442. Longest String with All Prefixes - Medium
443. Number of Distinct Substrings in a String - Hard
444. Bit PreRequisites for TRIE Problems - Hard
445. Maximum XOR of two numbers in an array - Medium
446. Maximum XOR With an Element From Array - Hard

STEP 18: STRINGS (9 Problems)
============================

Lec 1: Hard Problems (9 Problems)
--------------------------------
447. Minimum number of bracket reversals needed to make an expression balanced - Medium
448. Count and say - Medium
449. Hashing In Strings | Theory - Medium
450. Rabin Karp - Hard
451. Z-Function - Easy
452. KMP algo / LPS(pi) array - Hard
453. Shortest Palindrome - Hard
454. Longest happy prefix - Hard
455. Count palindromic subsequence in given string - Hard

==================================================
TOTAL PROBLEMS: 455
==================================================

DIFFICULTY BREAKDOWN:
- Easy: 156 problems
- Medium: 199 problems  
- Hard: 100 problems 